#!/bin/bash

source $DOTFILES/ubuntu/scripts/utils/get_index.sh
source $DOTFILES/ubuntu/scripts/utils/find_dir.sh

if [ -z "$1" ]; then
    echo "A name for grid should be provided"
    exit
fi

if tmux has-session -t $1 2>/dev/null; then
    echo "session already exists."
    exit
fi

args=("$@")
length=${#args[@]}

window_names=()
window_paths=()
window_arg_pos=$(get_word_index "-w" ${args[@]})
windows=(${args[@]:((window_arg_pos + 1)):$length})

if [[ $((window_arg_pos + 1)) == $length ]]; then
    echo "at least one window should be passed"
    exit
fi

if [[ $window_arg_pos != -1 ]]; then
    for index in ${!windows[@]}; do
        prev=${windows[$index - 1]}
        payload=${windows[$index]}
        if [[ $payload == -* ]]; then
            continue
        fi
        if [[ $prev == "-c" ]]; then
            window_paths+=("$payload")
            continue
        fi
        window_names+=("$payload")
    done
fi

if [[ ${#window_names[@]} != 0 ]]; then
    tmux new-session -s $1 -n ${window_names[0]} -c $(find_dir ${window_paths[0]}) -d
else
    tmux new-session -s $1 -c $(find_dir ${window_paths[0]}) -d
fi

make_panels() {
    dir=$(find_dir $1)
    tmux split-window -h -c $dir

    tmux select-pane -t 0
    tmux split-window -v -c $dir

    tmux select-pane -t 2
    tmux split-window -v -c $dir
}

for index in ${!window_names[@]}; do
    output=$(tmux list-windows -t "$1")
    name=${window_names[$index]}
    dir=${window_paths[$index]}

    if [[ "$output" == *"$name"* ]]; then
        tmux select-window -t "$name"
        make_panels $dir
    else
        tmux new-window -n "$name" -c $(find_dir $dir)
        make_panels $dir
    fi
done

tmux select-window -t "${window_names[0]}"
tmux a -t $1
